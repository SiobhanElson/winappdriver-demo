variables:
    solution: '**/*.sln'
    buildPlatform: 'Any CPU'
    buildConfiguration: 'Release'

stages:
- stage: Build
  pool:
    vmImage: '$(buildAgent)'

  jobs:
  - job: Build
    workspace:
      clean: all

    steps:
    - task: NuGetToolInstaller@1

    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'

    - task: VSBuild@1
      inputs:
        solution: '$(solution)'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    - task: VSTest@2
      inputs:
        testSelector: 'testAssemblies'
        testAssemblyVer2: |
          **\OtherTests.dll
          !**\obj\**
        searchFolder: '$(System.DefaultWorkingDirectory)'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: 'TestApp\bin\$(buildConfiguration)'
        ArtifactName: 'applicationToTest'
        publishLocation: 'Container'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: 'WinAppDriverExample\bin\$(buildConfiguration)'
        ArtifactName: 'uiTests'
        publishLocation: 'Container'

- stage: Run_UI_tests
  dependsOn: Build
#  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  pool:
    vmImage: '$(uiTestAgent)'

  jobs:
  - job: Run_WinAppDriver_Tests
    variables:
      PathToApplicationUnderTest: '$(Pipeline.Workspace)\applicationToTest'
      WinAppDriverUrl: 'http://127.0.0.1:4723'

    workspace:
     clean: all

    steps:
    - task: DownloadPipelineArtifact@2
      displayName: Download uiTests artifact from build
      inputs:
        buildType: 'current'
        targetPath: '$(Pipeline.Workspace)'

    - task: FileTransform@2
      displayName: 'Update appsettings for test to variables specified in the job'
      inputs:
        folderPath: '$(Pipeline.Workspace)\uiTests'
        xmlTransformationRules: 
        jsonTargetFiles: 'appsettings.json'

    - task: PowerShell@2
      displayName: Start WinAppDriver
      inputs:
        targetType: 'inline'
        script: 'start ''$(winAppDriverPath)'''

    - task: VSTest@2
      inputs:
        testSelector: 'testAssemblies'
        testAssemblyVer2: |
          **\WinAppDriverExample.dll
          !**\obj\**
        searchFolder: '$(Pipeline.Workspace)\uiTests'
        uiTests: true
        testRunTitle: 'WinAppDriverExample UI Tests'

    - task: PowerShell@2
      displayName: Stop WinAppDriver
      inputs:
        targetType: 'inline'
        script: 'get-process "WinAppDriver" | stop-process -force'
